@page "/"

@using Microsoft.AspNetCore.Authorization
@using SoftwareTest.Models
@attribute [Authorize(Policy = "AuthenticatedUser")]

@inject AuthenticationStateProvider _AuthenticationStateProvider;
@inject Models.TodolistContext _todoContext;
@inject Codes.HashinHandlers _hashinHandlers;
@inject CprService _cprService;

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        <div>You are logged in @userName</div>
        @if (!string.IsNullOrEmpty(existingCpr))
        {
            <div>Existing CPR: @existingCpr</div>
        }
        @if (isCprMatched.HasValue)
        {
            if (isCprMatched.Value)
            {
                <div>CPR Matched!</div>
            }
            else
            {
                <div>CPR does not match!</div>
            }
        }
        @if (showAddCprText)
        {
            <div>Added CPR to the database: @cprNumber</div>
        }
        <button @onclick="AddCpr">Submit</button>
        <label for="cprInput">Enter CPR Number:</label>
        <input id="cprInput" @bind="cprNumber" maxlength="10" />
    </Authorized>
    <NotAuthorized>
        <div>You are not logged in</div>
    </NotAuthorized>
</AuthorizeView>

Welcome to your new app.

@code {
    public bool _isAuthenticated;
    public string userName { get; set; }
    private string cprNumber;
    private string existingCpr;
    private bool? isCprMatched;
    private bool showAddCprText;

    protected override async Task OnInitializedAsync()
    {
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        userName = user.Identity.Name;

        if (user.Identity != null)
            _isAuthenticated = user.Identity.IsAuthenticated;

        // Check if the user already has a CPR in the database
        existingCpr = _todoContext.Cprs
            .Where(c => c.User == userName)
            .Select(c => c.Cprnr)
            .FirstOrDefault();
    }

    private async Task AddCpr()
    {
        // Check if there is no CPR for the user
        if (string.IsNullOrEmpty(existingCpr))
        {
            // Add a new CPR to the database
            await _cprService.AddCprToDatabase(userName, cprNumber);
            existingCpr = cprNumber; // Set existingCpr to the newly added CPR
            isCprMatched = true; // Indicate that the CPR is matched
        }
        else
        {
            // Check if the entered CPR matches the stored CPR in the database
            bool isMatched = _hashinHandlers.HMACVerify(cprNumber, existingCpr);
            isCprMatched = isMatched; // Set isCprMatched based on the verification result

            if (isMatched)
            {
                showAddCprText = false; // Do not display the "Added CPR to the database" message
            }
        }
    }
}
